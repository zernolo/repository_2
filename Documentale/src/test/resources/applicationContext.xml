<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">

	<bean
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<!-- Next value is the full qualified name of the static setter including
			method name -->
		<property name="staticMethod" value="wa3.web.WebFactory.setRepositoryRoot" />
		<property name="arguments">
			<value>${repositoryRoot}</value>
		</property>
	</bean>

	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="systemPropertiesModeName">
			<value>SYSTEM_PROPERTIES_MODE_OVERRIDE</value>
		</property>
		<property name="location">
			<value>file:${app_file_path}</value>
		</property>
	</bean>


	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="${jdbc.driverClassName}" />
		<property name="jdbcUrl" value="${jdbc.db_url}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="maxPoolSize" value="${jdbc.maxPoolSize}" />
		<property name="minPoolSize" value="${jdbc.minPoolSize}" />
		<property name="maxStatements" value="${jdbc.maxStatements}" />
		<property name="testConnectionOnCheckout" value="${jdbc.testConnection}" />

	</bean>

	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="systemPropertiesModeName">
			<value>SYSTEM_PROPERTIES_MODE_OVERRIDE</value>
		</property>
		<property name="location">
			<value>file:${app_file_path}</value>
		</property>
	</bean>


	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan">
			<value>
				wa3.model
			</value>
		</property>
		<property name="hibernateProperties">
			<props>
				<!-- org.hibernate.dialect.HSQLDialect -->
				<prop key="hibernate.dialect">
					org.hibernate.dialect.MySQL5InnoDBDialect
				</prop>
				<prop key="hibernate.show_sql">
					true
				</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.generate_statistics">
					true
				</prop>
				<!-- hibernate.hbm2ddl.auto -->
				<prop key="hibernate.hbm2ddl.auto">
					update
				</prop>
				<!-- So the list of possible options are -->
				<!-- validate: validate the schema, makes no changes to the database. -->
				<!-- update: update the schema. -->
				<!-- create: creates the schema, destroying previous data. -->
				<!-- create-drop: drop the schema at the end of the session. -->

			</props>
		</property>
	</bean>

	<bean id="transactionManager"
		class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<tx:annotation-driven />

	<bean id="documentiDao" class="wa3.dao.DocumentiDaoImpl">
		<property name="sessionFactory" ref="sessionFactory" />
		<property name="transactionManager" ref="transactionManager" />
	</bean>

	<bean id="tagDao" class="wa3.dao.TagDaoImpl">
		<property name="sessionFactory" ref="sessionFactory" />
		<property name="transactionManager" ref="transactionManager" />
	</bean>

	<bean id="tagDocumentiDao" class="wa3.dao.TagDocumentiDaoImpl">
		<property name="sessionFactory" ref="sessionFactory" />
		<property name="transactionManager" ref="transactionManager" />
	</bean>

</beans>